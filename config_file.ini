[generator]
; architecture: [unet]
arch_g = unet
; learning rate
lrg = 5e-5
; amount of filters for the first convolutional layer
fg = 16
; normalization after convolution: [none,layer,instance]
normg = instance

[critic]
; architecture: [dcgan,patchgan]
arch_c = dcgan
; learning rate
lrc = 2e-5
; amount of filters for the first convolutional layer
fc = 32
; normalization after convolution: [none,layer,instance]
normc = layer
; number of intermediate critic iterations (doubled during the first epoch)
nc = 15
; influence of the gradient penalty
p = 10

[training]
; epochs
ep = 100
; batches per epoch (>80)
bat_per_epo = 120
; minibatch size
batch_size = 8
; influence patch invariance
lam = 1
; whether to use gpu acceleration (1) or not (0)
is_gpu = 1

